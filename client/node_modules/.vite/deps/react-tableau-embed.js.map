{
  "version": 3,
  "sources": ["../../react-tableau-embed/src/index.tsx", "../../react-tableau-embed/src/useTableau/index.tsx", "../../react-tableau-embed/src/TableauViz.tsx", "../../react-tableau-embed/src/scrapedTableauTypes/Enums.ts", "../../react-tableau-embed/src/useTableau/useScript.tsx", "../../react-tableau-embed/src/loadingSpinner/index.tsx", "../../react-tableau-embed/src/scrapedTableauTypes/ExternalContract_Shared_Namespaces_Tableau.ts", "../../react-tableau-embed/src/scrapedTableauTypes/VizInterfaces.ts"],
  "sourcesContent": ["import * as React from 'react';\nimport useTableau from './useTableau';\nimport { OptionalTableauVizProps } from './TableauViz';\nimport { TableauVizRef } from './types';\nimport LoadingSpinner from './loadingSpinner';\n\ninterface ITableauEmbed extends OptionalTableauVizProps {\n  sourceUrl: string;\n  version?: string;\n  loadingSpinner?: React.ReactElement;\n}\n\nfunction TableauEmbed(props: ITableauEmbed, ref: TableauVizRef) {\n  const { sourceUrl, version, ...optionalProperties } = props;\n  const {\n    isSuccess, isError, component, ...tableau\n  } = useTableau({\n    ref,\n    sourceUrl,\n    version,\n    optionalProperties,\n  });\n\n  if (isError) {\n    console.error(`Error loading tableau embed api: ${tableau.errorMessage}`);\n    return <h3>error loading tableau</h3>;\n  }\n\n  if (!isSuccess) {\n    return props.loadingSpinner ?? <LoadingSpinner />;\n  }\n\n  if (!component) {\n    console.error(\n      `Finished loading but component is falsy. Error message: ${\n        tableau.errorMessage}`\n    );\n    return <h3>component error: falsy\"</h3>;\n  }\n\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return <>{component}</>;\n}\nexport default React.forwardRef(TableauEmbed);\n", "import * as React from 'react';\nimport TableauViz, {\n  OptionalTableauVizProps,\n  TableauVizCustomProps,\n} from '../TableauViz';\nimport { TableauVizRef } from '../types';\nimport useScript from './useScript';\n\ntype UseTableauStatus = 'idle' | 'loading' | 'ready' | 'error';\n\n// mirrors react-query\n// returning component instead of data\nexport interface UseTableauReturn {\n  status: UseTableauStatus;\n  isLoading: boolean;\n  isError: boolean;\n  isSuccess: boolean;\n  isIdle: boolean;\n  errorMessage: string | undefined;\n  component: React.ReactNode;\n}\n\nexport interface UseTableauParams {\n  ref: TableauVizRef;\n  sourceUrl: string;\n  version?: string;\n  optionalProperties?: OptionalTableauVizProps;\n}\n\n// maps api versions to api status\nconst cachedApiStatuses: Record<string, UseTableauStatus | undefined> = {};\n\n/**\n * extract hostname of a url\n * will throw error if malformed\n */\nfunction extractHostname(urlString: string): string {\n  const url = new URL(urlString);\n  return url.hostname;\n}\n\n/**\n * returns url for getting the tableau api\n * @see https://help.tableau.com/current/api/embedding_api/en-us/docs/embedding_api_get.html\n */\nfunction buildTableauApiUrl(hostname: string, version?: string, min = false) {\n  return `https://${hostname}/javascripts/api/tableau.embedding.${\n    version ?? '3.latest'\n  }${min ? '.min' : ''}.js`;\n}\n\nexport default function useTableau(args: UseTableauParams): UseTableauReturn {\n  const apiVersion = args.version ?? 'latest';\n  const tableauVizProps = React.useMemo<TableauVizCustomProps>(\n    () => ({\n      src: args.sourceUrl,\n      ...args.optionalProperties,\n    }),\n    [args.sourceUrl, args.optionalProperties]\n  );\n\n  const [status, setStatus] = React.useState<UseTableauStatus>(() => {\n    if (!args.sourceUrl) return 'idle';\n    if (typeof window === 'undefined') return 'loading';\n    return cachedApiStatuses[apiVersion] ?? 'loading';\n  });\n  // used for return status objects\n  const [errMsg, setErrMsg] = React.useState<string | undefined>();\n\n  const hostname = extractHostname(args.sourceUrl);\n  const apiUrl = buildTableauApiUrl(hostname, args.version, !!args.version);\n\n  const { status: apiLoadStatus, errorMessage: apiErrorMessage } = useScript(apiUrl);\n\n  // respond to api status loading change\n  // then update exposed status\n  React.useEffect(() => {\n    // update exposed status\n    setStatus(apiLoadStatus);\n\n    // handle edge-cases:\n    //  if error, expose error message\n    if (status === 'error') {\n      setErrMsg(apiErrorMessage);\n    }\n\n    //  if idle clear error & component\n    if (apiLoadStatus === 'idle') {\n      setErrMsg('');\n    }\n  }, [apiLoadStatus]);\n\n  return {\n    status,\n    component: status === 'ready' && (\n      <TableauViz ref={args.ref} {...tableauVizProps} />\n    ),\n    errorMessage: errMsg,\n    isIdle: status === 'idle',\n    isLoading: status === 'loading',\n    isError: status === 'error',\n    isSuccess: status === 'ready',\n  };\n}\n", "/**\n * wraps custom element\n *\n * for props:\n * @see https://help.tableau.com/current/api/embedding_api/en-us/docs/embedding_api_configure.htm\n *\n * for\n */\nimport * as React from 'react';\nimport { TableauEventType } from './scrapedTableauTypes/Enums';\nimport {\n  TableauVizRef, VizChildElements, FilterParameters, VizParameter, CustomParameter\n} from './types';\n\nexport interface OptionalTableauVizProps {\n  children?: React.JSX.Element[] | React.JSX.Element;\n  height?: React.CSSProperties['height'];\n  width?: React.CSSProperties['width'];\n  'hide-tabs'?: boolean;\n  toolbar?: 'top' | 'bottom' | 'hidden';\n  device?: 'default' | 'desktop' | 'tablet' | 'phone';\n  token?: string;\n  'instance-id-to-clone'?: any;\n  'disable-url-actions'?: boolean;\n  'hide-edit-button'?: boolean;\n  'hide-edit-in-desktop-button'?: boolean;\n  'suppress-default-edit-behavior'?: boolean;\n  onCustomMarkContextMenuEvent?: (event: any) => void;\n  onCustomViewLoaded?: (event: any) => void;\n  onCustomViewRemoved?: (event: any) => void;\n  onCustomViewSaved?: (event: any) => void;\n  onCustomViewSetDefault?: (event: any) => void;\n  onEditButtonClicked?: (event: any) => void;\n  onEditInDesktopButtonClicked?: (event: any) => void;\n  onFilterChanged?: (event: any) => void;\n  onFirstInteractive?: (event: any) => void;\n  onFirstVizSizeKnown?: (event: any) => void;\n  onMarkSelectionChanged?: (event: any) => void;\n  onToolbarStateChanged?: (event: any) => void;\n  onTabSwitched?: (event: any) => void;\n  onParameterChanged?: (event: any) => void;\n  onUrlAction?: (event: any) => void;\n  onWorkbookPublished?: (event: any) => void;\n  onWorkbookPublishedAs?: (event: any) => void;\n  onWorkbookReadyToClose?: (event: any) => void;\n  onEventListenerCustomMarkContextMenuEvent?: (event: any) => void;\n  onEventListenerCustomViewLoaded?: (event: any) => void;\n  onEventListenerCustomViewRemoved?: (event: any) => void;\n  onEventListenerCustomViewSaved?: (event: any) => void;\n  onEventListenerCustomViewSetDefault?: (event: any) => void;\n  onEventListenerEditButtonClicked?: (event: any) => void;\n  onEventListenerEditInDesktopButtonClicked?: (event: any) => void;\n  onEventListenerFilterChanged?: (event: any) => void;\n  onEventListenerFirstInteractive?: (event: any) => void;\n  onEventListenerFirstVizSizeKnown?: (event: any) => void;\n  onEventListenerMarkSelectionChanged?: (event: any) => void;\n  onEventListenerToolbarStateChanged?: (event: any) => void;\n  onEventListenerTabSwitched?: (event: any) => void;\n  onEventListenerParameterChanged?: (event: any) => void;\n  onEventListenerUrlAction?: (event: any) => void;\n  onEventListenerWorkbookPublished?: (event: any) => void;\n  onEventListenerWorkbookPublishedAs?: (event: any) => void;\n  onEventListenerWorkbookReadyToClose?: (event: any) => void;\n}\n\nexport interface TableauVizCustomProps extends OptionalTableauVizProps {\n  src: string;\n}\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      ['tableau-viz']: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLElement>,\n        HTMLElement\n      > &\n      TableauVizCustomProps;\n      [VizChildElements.VizFilter]: FilterParameters;\n      [VizChildElements.VizParameter]: VizParameter;\n      [VizChildElements.CustomParameter]: CustomParameter;\n    }\n  }\n}\n\nfunction TableauViz(props: TableauVizCustomProps, ref: TableauVizRef) {\n  const vizRef = React.useRef<any>(null);\n  React.useImperativeHandle(ref, () => vizRef.current);\n\n  // set event listeners\n  React.useEffect(() => {\n    if (vizRef && vizRef.current) {\n      const viz = vizRef.current;\n      // set optional event listener callbacks\n      if (props.onEventListenerCustomMarkContextMenuEvent) {\n        viz.addEventListener(\n          TableauEventType.CustomMarkContextMenuEvent,\n          props.onEventListenerCustomMarkContextMenuEvent\n        );\n      }\n      if (props.onEventListenerCustomViewLoaded) {\n        viz.addEventListener(\n          TableauEventType.CustomViewLoaded,\n          props.onEventListenerCustomViewLoaded\n        );\n      }\n      if (props.onEventListenerCustomViewRemoved) {\n        viz.addEventListener(\n          TableauEventType.CustomViewRemoved,\n          props.onEventListenerCustomViewRemoved\n        );\n      }\n      if (props.onEventListenerCustomViewSaved) {\n        viz.addEventListener(\n          TableauEventType.CustomViewSaved,\n          props.onEventListenerCustomViewSaved\n        );\n      }\n      if (props.onEventListenerCustomViewSetDefault) {\n        viz.addEventListener(\n          TableauEventType.CustomViewSetDefault,\n          props.onEventListenerCustomViewSetDefault\n        );\n      }\n      if (props.onEventListenerEditButtonClicked) {\n        viz.addEventListener(\n          TableauEventType.EditButtonClicked,\n          props.onEventListenerEditButtonClicked\n        );\n      }\n      if (props.onEventListenerEditInDesktopButtonClicked) {\n        viz.addEventListener(\n          TableauEventType.EditInDesktopButtonClicked,\n          props.onEventListenerEditInDesktopButtonClicked\n        );\n      }\n      if (props.onEventListenerFilterChanged) {\n        viz.addEventListener(\n          TableauEventType.FilterChanged,\n          props.onEventListenerFilterChanged\n        );\n      }\n      if (props.onEventListenerFirstInteractive) {\n        viz.addEventListener(\n          TableauEventType.FirstInteractive,\n          props.onEventListenerFirstInteractive\n        );\n      }\n      if (props.onEventListenerFirstVizSizeKnown) {\n        viz.addEventListener(\n          TableauEventType.FirstVizSizeKnown,\n          props.onEventListenerFirstVizSizeKnown\n        );\n      }\n      if (props.onEventListenerMarkSelectionChanged) {\n        viz.addEventListener(\n          TableauEventType.MarkSelectionChanged,\n          props.onEventListenerMarkSelectionChanged\n        );\n      }\n      if (props.onEventListenerToolbarStateChanged) {\n        viz.addEventListener(\n          TableauEventType.ToolbarStateChanged,\n          props.onEventListenerToolbarStateChanged\n        );\n      }\n      if (props.onEventListenerTabSwitched) {\n        viz.addEventListener(\n          TableauEventType.TabSwitched,\n          props.onEventListenerTabSwitched\n        );\n      }\n      if (props.onEventListenerParameterChanged) {\n        viz.addEventListener(\n          TableauEventType.ParameterChanged,\n          props.onEventListenerParameterChanged\n        );\n      }\n      if (props.onEventListenerUrlAction) {\n        viz.addEventListener(\n          TableauEventType.UrlAction,\n          props.onEventListenerUrlAction\n        );\n      }\n      if (props.onEventListenerWorkbookPublished) {\n        viz.addEventListener(\n          TableauEventType.WorkbookPublished,\n          props.onEventListenerWorkbookPublished\n        );\n      }\n      if (props.onEventListenerWorkbookPublishedAs) {\n        viz.addEventListener(\n          TableauEventType.WorkbookPublishedAs,\n          props.onEventListenerWorkbookPublishedAs\n        );\n      }\n      if (props.onEventListenerWorkbookReadyToClose) {\n        viz.addEventListener(\n          TableauEventType.WorkbookReadyToClose,\n          props.onEventListenerWorkbookReadyToClose\n        );\n      }\n      return () => {\n        if (props.onEventListenerCustomMarkContextMenuEvent) {\n          viz.removeEventListener(\n            TableauEventType.CustomMarkContextMenuEvent,\n            props.onEventListenerCustomMarkContextMenuEvent\n          );\n        }\n        if (props.onEventListenerCustomViewLoaded) {\n          viz.removeEventListener(\n            TableauEventType.CustomViewLoaded,\n            props.onEventListenerCustomViewLoaded\n          );\n        }\n        if (props.onEventListenerCustomViewRemoved) {\n          viz.removeEventListener(\n            TableauEventType.CustomViewRemoved,\n            props.onEventListenerCustomViewRemoved\n          );\n        }\n        if (props.onEventListenerCustomViewSaved) {\n          viz.removeEventListener(\n            TableauEventType.CustomViewSaved,\n            props.onEventListenerCustomViewSaved\n          );\n        }\n        if (props.onEventListenerCustomViewSetDefault) {\n          viz.removeEventListener(\n            TableauEventType.CustomViewSetDefault,\n            props.onEventListenerCustomViewSetDefault\n          );\n        }\n        if (props.onEventListenerEditButtonClicked) {\n          viz.removeEventListener(\n            TableauEventType.EditButtonClicked,\n            props.onEventListenerEditButtonClicked\n          );\n        }\n        if (props.onEventListenerEditInDesktopButtonClicked) {\n          viz.removeEventListener(\n            TableauEventType.EditInDesktopButtonClicked,\n            props.onEventListenerEditInDesktopButtonClicked\n          );\n        }\n        if (props.onEventListenerFilterChanged) {\n          viz.removeEventListener(\n            TableauEventType.FilterChanged,\n            props.onEventListenerFilterChanged\n          );\n        }\n        if (props.onEventListenerFirstInteractive) {\n          viz.removeEventListener(\n            TableauEventType.FirstInteractive,\n            props.onEventListenerFirstInteractive\n          );\n        }\n        if (props.onEventListenerFirstVizSizeKnown) {\n          viz.removeEventListener(\n            TableauEventType.FirstVizSizeKnown,\n            props.onEventListenerFirstVizSizeKnown\n          );\n        }\n        if (props.onEventListenerMarkSelectionChanged) {\n          viz.removeEventListener(\n            TableauEventType.MarkSelectionChanged,\n            props.onEventListenerMarkSelectionChanged\n          );\n        }\n        if (props.onEventListenerToolbarStateChanged) {\n          viz.removeEventListener(\n            TableauEventType.ToolbarStateChanged,\n            props.onEventListenerToolbarStateChanged\n          );\n        }\n        if (props.onEventListenerTabSwitched) {\n          viz.removeEventListener(\n            TableauEventType.TabSwitched,\n            props.onEventListenerTabSwitched\n          );\n        }\n        if (props.onEventListenerParameterChanged) {\n          viz.removeEventListener(\n            TableauEventType.ParameterChanged,\n            props.onEventListenerParameterChanged\n          );\n        }\n        if (props.onEventListenerUrlAction) {\n          viz.removeEventListener(\n            TableauEventType.UrlAction,\n            props.onEventListenerUrlAction\n          );\n        }\n        if (props.onEventListenerWorkbookPublished) {\n          viz.removeEventListener(\n            TableauEventType.WorkbookPublished,\n            props.onEventListenerWorkbookPublished\n          );\n        }\n        if (props.onEventListenerWorkbookPublishedAs) {\n          viz.removeEventListener(\n            TableauEventType.WorkbookPublishedAs,\n            props.onEventListenerWorkbookPublishedAs\n          );\n        }\n        if (props.onEventListenerWorkbookReadyToClose) {\n          viz.removeEventListener(\n            TableauEventType.WorkbookReadyToClose,\n            props.onEventListenerWorkbookReadyToClose\n          );\n        }\n      };\n    }\n    return () => { };\n  }, [vizRef]);\n\n  return <tableau-viz id=\"tableauViz\" ref={vizRef} {...props} />;\n}\n\nexport default React.forwardRef(TableauViz);\n", "// All enum values made available to Embedding developers.\n// Enums should be kept in alphabetical order.\n// Most of them should match an enum on the server defined at\n// workgroup/vqlweb/scriptsharp/src/ApiShared/PublicEnums.cs#L398:17\n\n/**\n * device types available to use with @VizInterfaces:VizCreateOptions:device\n */\nexport enum DeviceType {\n  Default = 'default',\n  Desktop = 'desktop',\n  Tablet = 'tablet',\n  Phone = 'phone',\n}\n\n/**\n * All error codes used by the Embedding API.\n */\nexport enum EmbeddingErrorCodes {\n  /**\n   * The browser is not capable of supporting the Tableau JavaScript API\n   */\n  BrowserNotCapable = 'browser-not-capable',\n  /**\n   * The permissions on a workbook or a view do not allow downloading the workbook.\n   */\n  DownloadWorkbookNotAllowed = 'download-workbook-not-allowed',\n  /**\n   * Thrown when an error occurrs while attempting to perform a filter operation.\n   */\n  FilterCannotBePerformed = 'filter-cannot-be-performed',\n  /**\n   * Thrown when attempting to switch to a sheet by index that does not exist in the workbook.\n   */\n  IndexOutOfRange = 'index-out-of-range',\n  /**\n   * Thrown when an error occurrs within the Tableau JavaScript API. Contact Tableau Support.\n   */\n  InternalError = 'internal-error',\n  /**\n   * An operation was attempted on a custom view that does not exist.\n   */\n  InvalidCustomViewName = 'invalid-custom-view-name',\n  /**\n   * An invalid date was specified in a method that required a date parameter.\n   */\n  InvalidDateParameter = 'invalid-date-parameter',\n  /**\n   * Either a filter operation was attempted on a field that does not exist in the data source, or the value supplied\n   * in the filter operation is the wrong data type or format.\n   */\n  invalidFilterFieldNameOrValue = 'invalid-filter-field-name',\n  /**\n   * A parameter is not the correct data type or format. The name of the parameter is specified in the Error.message\n   * field.\n   */\n  InvalidParameter = 'invalid-parameter',\n  /**\n   * A negative size was specified or the maxSize value is less than minSize in Sheet.changeSizeAsync().\n   */\n  InvalidSize = 'invalid-size',\n  /**\n   * A behavior value was found that is not included in the SheetSizeBehavior enum.\n   */\n  InvalidSizeBehavior = 'invalid-size-behavior',\n  /**\n   * A behavior other than SheetSizeBehavior.Automatic was specified in Sheet.changeSizeAsync() when the sheet is a\n   * Worksheet instance.\n   */\n  InvalidSizeBehaviorOnWorksheet = 'invalid-size-behavior-on-worksheet',\n  /**\n   * The URL specified in the Viz class constructor is not valid.\n   */\n  InvalidUrl = 'invalid-url',\n  /**\n   * The maxSize field is missing in Sheet.changeSizeAsync() when specifying SheetSizeBehavior.AtMost.\n   */\n  MissingMaxSize = 'missing-max-size',\n  /**\n   * The minSize field is missing in Sheet.changeSizeAsync() when specifying SheetSizeBehavior.AtLeast.\n   */\n  MissingMinSize = 'missing-min-size',\n  /**\n   * The minSize or maxSize field is missing in Sheet.changeSizeAsync() when specifying SheetSizeBehavior.Range.\n   */\n  MissingMinMaxSize = 'missing-min-max-size',\n  /**\n   * Can occur if the embedding app interacts with a parameter that has been removed from the worksheet.\n   */\n  MissingParameter = 'missing-parameter',\n  /**\n   * The rangeN field is missing for a relative date filter of type LASTN or NEXTN.\n   */\n  MissingRangeNForRelativeDateFilters = 'missing-range-n-for-relative-date-filters',\n  /**\n   * An attempt was made to access Sheet.getUrl() on a hidden sheet. Hidden sheets do not have URLs.\n   */\n  NoUrlForHiddenWorksheet = 'no-url-for-hidden-worksheet',\n  /**\n   * One or both of the parentElement or the URL parameters is not specified in the Viz constructor.\n   */\n  NoUrlOrParentElementNotFound = 'no-url-or-parent-element-not-found',\n  /**\n   * An operation was attempted on a sheet that is not active or embedded within the active dashboard.\n   */\n  NotActiveSheet = 'not-active-sheet',\n  /**\n   * A required parameter was not specified, null, or an empty string/array.\n   */\n  NullOrEmptyParameter = 'null-or-empty-parameter',\n  /**\n   * An operation was attempted on a sheet that does not exist in the workbook.\n   */\n  SheetNotInWorkbook = 'sheet-not-in-workbook',\n  /**\n   * An operation is performed on a CustomView object that is no longer valid (it has been removed).\n   */\n  StaleDataReference = 'stale-data-reference',\n  /**\n   * An unknown event name was specified in the call to Viz.addEventListener or Viz.removeEventListener.\n   */\n  UnsupportedEventName = 'unsupported-event-name',\n  /**\n   * A Viz object has already been created as a child of the parentElement specified in the Viz constructor.\n   */\n  VizAlreadyInManager = 'viz-already-in-manager',\n  /**\n   * Function is not supported in the embedding api.\n   */\n  ImplementationError = 'wrong-implementation',\n  /**\n   * @NotImplemented\n   */\n  NotImplemented = 'not-implemented',\n  /**\n   * Unknown error during event initialization\n   */\n  EventInitializationError = 'event-initialization-error',\n  /**\n   * Version of the embedding api not supported by the version of tableau\n   */\n  IncompatibleVersionError = 'incompatible-version-error',\n\n  /**\n   * Unknown {@link TableauDialogType} passed in to Viz.displayDialogAsync.\n   */\n  UnknownDialogType = 'unknown-dialog-type',\n\n  /**\n   * Can occur if the API interacts with a filter that has been removed from the worksheet.\n   * Can also occurs if a {@link FilterType} has not been implemented.\n   */\n  FilterMissingOrNotImplemented = 'filter-missing-not-implemented',\n\n  /**\n   * Can occur if story point ids no longer match.\n   */\n  StoryPointIdMismatch = 'storypoint-id-mismatch',\n}\n\n/**\n * formats available to use with displayStaticImage in @VizInterfaces\n */\nexport enum FileFormats {\n  PDF = 'pdf',\n  PNG = 'png',\n}\n\nexport enum RevertVizSelection {\n  All = 'all',\n  Axes = 'axes',\n  Filters = 'filters',\n  Sorts = 'sorts',\n  Shelves = 'shelves',\n}\n\nexport enum ToolbarButtons {\n  Alerts = 'alerts',\n  AskData = 'askData',\n  CustomViews = 'customViews',\n  DataDetails = 'dataDetails',\n  Share = 'share',\n  Subscribe = 'subscribe',\n}\n\nexport enum Toolbar {\n  Top = 'top',\n  Bottom = 'bottom',\n  Hidden = 'hidden',\n}\n\nexport enum SheetSizeBehavior {\n  Automatic = 'automatic',\n  Exactly = 'exactly',\n  Range = 'range',\n  AtLeast = 'atleast',\n  AtMost = 'atmost',\n}\n\n/**\n * Be careful when adding new event types. Extensions and embedding follow two different patterns on how events are named.\n * Events should be all lower case and without hypens or underscores.\n */\n\n/**\n * Represents the type of tableau embedding event that can be listened for.\n */\nexport enum TableauEventType {\n  /**\n   * Raised when a custom view has finished loading. This event is raised after the callback function for {@link FirstInteractive} (if any) has been called.\n   *\n   * @category Viewing\n   */\n  CustomViewLoaded = 'customviewloaded',\n\n  /**\n   * Raised when a custom view has been removed.\n   *\n   * @category Viewing\n   */\n  CustomViewRemoved = 'customviewremoved',\n\n  /**\n   * Raised when a custom view has been saved (newly created or updated).\n   *\n   * @category Viewing\n   */\n  CustomViewSaved = 'customviewsaved',\n\n  /**\n   * Raised when a custom view has been set as the default view for a workbook.\n   *\n   * @category Viewing\n   */\n  CustomViewSetDefault = 'customviewsetdefault',\n\n  /** Raised when the user clicks on the Edit Button.\n   *\n   * @category Viewing\n   */\n  EditButtonClicked = 'editbuttonclicked',\n\n  /** Raised when the user clicks on the Edit In Desktop Button.\n   *\n   * @category Authoring, Viewing\n   */\n  EditInDesktopButtonClicked = 'editindesktopbuttonclicked',\n\n  /** Raised when any filter has changed state. You can use this event type with TableauViz objects.\n   *\n   * @category Viewing\n   */\n  FilterChanged = 'filterchanged',\n\n  /** Fired when viz size is known\n   *\n   * @category Authoring, Viewing\n   */\n  FirstVizSizeKnown = 'firstvizsizeknown',\n\n  /** Fired when a viz first becomes interactive\n   *\n   * @category Authoring, Viewing\n   */\n  FirstInteractive = 'firstinteractive',\n\n  /** Raised when a custom mark context menu is clicked.\n   *\n   * @category Viewing\n   */\n  CustomMarkContextMenuEvent = 'custommarkcontextmenu',\n\n  /** The selected marks on a visualization have changed. You can use this event type with TableauViz objects.\n   *\n   * @category Viewing\n   */\n  MarkSelectionChanged = 'markselectionchanged',\n\n  /** A parameter has had its value modified. You can use this event type with [[Parameter]] objects.\n   *\n   * @category Viewing\n   */\n  ParameterChanged = 'parameterchanged',\n\n  /** Raised when a toolbar button or control becomes available or becomes unavailable.\n   *\n   * @category Viewing\n   */\n  ToolbarStateChanged = 'toolbarstatechanged',\n\n  /** Raised when the workbook is ready to close. This notification is sent when using embedded web authoring functionality.\n   *\n   * @category Authoring\n   */\n  WorkbookReadyToClose = 'workbookreadytoclose',\n\n  /** Raised when the workbook has been published. This notification is sent when using embedded web authoring functionality.\n   *\n   * @category Authoring\n   */\n  WorkbookPublished = 'workbookpublished',\n\n  /** Raised when \"publish as\" is successful. This notification is sent when using embedded web authoring functionality.\n   *\n   * @category Authoring\n   */\n  WorkbookPublishedAs = 'workbookpublishedas',\n\n  /**\n   * Raised when a URL action occurs. See the {@link UrlActionEvent} class.\n   *\n   * @category Viewing\n   */\n  UrlAction = 'urlaction',\n\n  /**\n   * Raised after a tab switch occurs (the active sheet has changed). Guarantees the viz object will be interactive after this.\n   *\n   * @category Viewing\n   */\n  TabSwitched = 'tabswitched',\n  /**\n   *\n   * Raised after a new story point becomes active.\n   *\n   * @category Viewing\n   */\n  StoryPointSwitched = 'storypointswitched',\n}\n\n/**\n * Represents the location of a context menu where users can add external menu items.\n */\nexport enum ApiMenuType {\n  /** External menu item will be injected in ubertip dialog */\n  Ubertip = 'ubertip',\n}\n\n/** You can use this type with [Viz](./Viz.html) object. */\nexport enum TableauDialogType {\n  /**\n   * Used to display the download PDF dialog.\n   */\n  ExportPDF = 'export-pdf',\n  /**\n   * Used to display the download PowerPoint dialog.\n   */\n  ExportPowerPoint = 'export-powerpoint',\n  /**\n   * Used to display the download Data dialog.\n   */\n  ExportData = 'export-data',\n  /**\n   * Used to display the download CrossTab dialog.\n   */\n  ExportCrossTab = 'export-cross-tab',\n  /**\n   * Used to display the download Workbook dialog.\n   */\n  ExportWorkbook = 'export-workbook',\n  /**\n   * Used to display the Share dialog.\n   */\n  Share = 'share',\n}\n", "// from https://usehooks-ts.com/react-hook/use-script\nimport { useEffect, useState } from 'react';\n\nexport type UseScriptStatus = 'idle' | 'loading' | 'ready' | 'error';\nexport interface UseScriptOptions {\n  shouldPreventLoad?: boolean;\n  removeOnUnmount?: boolean;\n}\n\n// Cached script statuses\nexport const cachedScriptStatuses: Record<string, UseScriptStatus | undefined> = {};\n\nfunction getScriptNode(src: string) {\n  const node: HTMLScriptElement | null = document.querySelector(\n    `script[src=\"${src}\"]`\n  );\n  const status = node?.getAttribute('data-status') as\n    | UseScriptStatus\n    | undefined;\n\n  return {\n    node,\n    status,\n  };\n}\n\ninterface UseScriptReturns {\n  status: UseScriptStatus;\n  errorMessage?: string;\n}\n\nfunction useScript(\n  src: string | null,\n  options?: UseScriptOptions\n): UseScriptReturns {\n  const [status, setStatus] = useState<UseScriptStatus>(() => {\n    if (!src || options?.shouldPreventLoad) {\n      return 'idle';\n    }\n\n    if (typeof window === 'undefined') {\n      // SSR Handling - always return 'loading'\n      return 'loading';\n    }\n\n    return cachedScriptStatuses[src] ?? 'loading';\n  });\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (!src || options?.shouldPreventLoad) {\n      return;\n    }\n\n    const cachedScriptStatus = cachedScriptStatuses[src];\n    if (cachedScriptStatus === 'ready' || cachedScriptStatus === 'error') {\n      // If the script is already cached, set its status immediately\n      setStatus(cachedScriptStatus);\n      return;\n    }\n\n    // Fetch existing script element by src\n    // It may have been added by another instance of this hook\n    const script = getScriptNode(src);\n    let scriptNode = script.node;\n\n    if (!scriptNode) {\n      // Create script element and add it to document body\n      scriptNode = document.createElement('script');\n      scriptNode.type = 'module';\n      scriptNode.src = src;\n      scriptNode.async = true;\n      scriptNode.setAttribute('data-status', 'loading');\n      document.body.appendChild(scriptNode);\n\n      // Store status in attribute on script\n      // This can be read by other instances of this hook\n      const setAttributeFromEvent = (event: Event) => {\n        const scriptStatus: UseScriptStatus = event.type === 'load' ? 'ready' : 'error';\n\n        scriptNode?.setAttribute('data-status', scriptStatus);\n      };\n\n      scriptNode.addEventListener('load', setAttributeFromEvent);\n      scriptNode.addEventListener('error', setAttributeFromEvent);\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.status ?? cachedScriptStatus ?? 'loading');\n    }\n\n    // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n    const setStateFromEvent = (event: Event) => {\n      const newStatus = event.type === 'load' ? 'ready' : 'error';\n      if (newStatus === 'error') {\n        setErrorMessage((event as any).message ?? JSON.stringify(event));\n      }\n      setStatus(newStatus);\n      cachedScriptStatuses[src] = newStatus;\n    };\n\n    // Add event listeners\n    scriptNode.addEventListener('load', setStateFromEvent);\n    scriptNode.addEventListener('error', setStateFromEvent);\n\n    // Remove event listeners on cleanup\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (scriptNode) {\n        scriptNode.removeEventListener('load', setStateFromEvent);\n        scriptNode.removeEventListener('error', setStateFromEvent);\n      }\n\n      if (scriptNode && options?.removeOnUnmount) {\n        scriptNode.remove();\n      }\n    };\n  }, [src, options?.shouldPreventLoad, options?.removeOnUnmount]);\n\n  return { status, errorMessage };\n}\n\nexport default useScript;\n", "/**\n * from https://loading.io/css/\n */\nimport * as React from 'react';\nimport classes from './spinner.module.css';\n\nexport default function LoadingSpinner() {\n  return (\n    <div className={classes['lds-ripple']}>\n      <div />\n      <div />\n    </div>\n  );\n}\n", "/**\n * The tableau namespace exists for organization and to avoid polluting\n * the global namespace. It contains no constructs other than sub-namespaces and the Tableau enumerations.\n */\nexport enum AnalyticsObjectType {\n  Cluster = 'cluster',\n  Forecast = 'forecast',\n  TrendLine = 'trend-line',\n}\n\nexport enum AnnotationType {\n  Mark = 'mark',\n  Point = 'point',\n  Area = 'area',\n}\n\nexport enum ColumnType {\n  Discrete = 'discrete',\n  Continuous = 'continuous',\n}\n\nexport enum ClassNameKey {\n  WorksheetTitle = 'tableau-worksheet-title',\n  Worksheet = 'tableau-worksheet',\n  Tooltip = 'tableau-tooltip',\n  StoryTitle = 'tableau-story-title',\n  DashboardTitle = 'tableau-dashboard-title',\n}\n\n/**\n * What the object represents in a dashboard.\n */\nexport enum DashboardObjectType {\n  Blank = 'blank',\n  Worksheet = 'worksheet',\n  QuickFilter = 'quick-filter',\n  ParameterControl = 'parameter-control',\n  PageFilter = 'page-filter',\n  Legend = 'legend',\n  Title = 'title',\n  Text = 'text',\n  Image = 'image',\n  WebPage = 'web-page',\n  Extension = 'extension',\n}\n\n/**\n * Enum that represents the visibility state of a dashboard object.\n * @since 1.7.0\n */\nexport enum DashboardObjectVisibilityType {\n  /** Used for turning on the visibility of a dashboard object. */\n  Show = 'show',\n\n  /** Used for turning off the visibility of a dashboard object. */\n  Hide = 'hide',\n}\n\n/**\n * The different types of data a value can have\n */\nexport enum DataType {\n  String = 'string',\n  Int = 'int',\n  Float = 'float',\n  Bool = 'bool',\n  Date = 'date',\n  DateTime = 'date-time',\n  Spatial = 'spatial',\n}\n\n/**\n * Enum that represents the changes that occur to a dashboard object.\n */\nexport enum DashboardLayoutChange {\n  /** A dashboard object was added */\n  Added = 'added',\n\n  /** A dashboard object was removed */\n  Removed = 'removed',\n\n  /** A dashboard object's floating state changed */\n  IsFloatingChanged = 'is-floating-changed',\n\n  /** A dashboard object's visibility changed */\n  IsVisibleChanged = 'is-visible-changed',\n\n  /** A dashboard object's position changed */\n  PositionChanged = 'position-changed',\n\n  /** A dashboard object's size changed */\n  SizeChanged = 'size-changed',\n\n  /** A dashboard object was renamed */\n  NameChanged = 'name-changed',\n}\n\n/**\n * Valid date ranges for a relative date filter.\n */\nexport enum DateRangeType {\n  Last = 'last',\n  LastN = 'last-n',\n  Next = 'next',\n  NextN = 'next-n',\n  Current = 'current',\n  ToDate = 'to-date',\n}\n\n/**\n * Enum that represents the types of dialog popup styles.\n */\nexport enum DialogStyle {\n  Window = 'window',\n  Modal = 'modal',\n  Modeless = 'modeless',\n}\n\nexport enum EncodingType {\n  Column = 'column',\n  Row = 'row',\n  Page = 'page',\n  Filter = 'filter',\n  MarksType = 'marks-type',\n  MeasureValues = 'measure-values',\n  Color = 'color',\n  Size = 'size',\n  Label = 'label',\n  Detail = 'detail',\n  Tooltip = 'tooltip',\n  Shape = 'shape',\n  Path = 'path',\n  Angle = 'angle',\n}\n\n/**\n *  Type of aggregation on a field.\n */\nexport enum FieldAggregationType {\n  Sum = 'sum',\n  Avg = 'avg',\n  Min = 'min',\n  Max = 'max',\n  Stdev = 'stdev',\n  Stdevp = 'stdevp',\n  Var = 'var',\n  Varp = 'varp',\n  Count = 'count',\n  Countd = 'countd',\n  Median = 'median',\n  Attr = 'attr',\n  None = 'none',\n  Year = 'year',\n  Qtr = 'qtr',\n  Month = 'month',\n  Day = 'day',\n  Hour = 'hour',\n  Minute = 'minute',\n  Second = 'second',\n  Week = 'week',\n  Weekday = 'weekday',\n  MonthYear = 'month-year',\n  Mdy = 'mdy',\n  End = 'end',\n  TruncYear = 'trunc-year',\n  TruncQtr = 'trunc-qtr',\n  TruncMonth = 'trunc-month',\n  TruncWeek = 'trunc-week',\n  TruncDay = 'trunc-day',\n  TruncHour = 'trunc-hour',\n  TruncMinute = 'trunc-minute',\n  TruncSecond = 'trunc-second',\n  Quart1 = 'quart1',\n  Quart3 = 'quart3',\n  Skewness = 'skewness',\n  Kurtosis = 'kurtosis',\n  InOut = 'in-out',\n  User = 'user',\n}\n\n/**\n * Role of a field.\n */\nexport enum FieldRoleType {\n  Dimension = 'dimension',\n  Measure = 'measure',\n  Unknown = 'unknown',\n}\n\n/**\n * An enumeration of the valid types of filters that can be applied.\n */\nexport enum FilterType {\n  Categorical = 'categorical',\n  Range = 'range',\n  Hierarchical = 'hierarchical',\n  RelativeDate = 'relative-date',\n}\n\n/**\n * The different update types for applying filter\n */\nexport enum FilterUpdateType {\n  Add = 'add',\n  All = 'all',\n  Replace = 'replace',\n  Remove = 'remove',\n}\n\n/**\n * The domain type for a filter\n */\nexport enum FilterDomainType {\n  /**\n   * The domain values that are relevant to the specified filter\n   * i.e. the domain is restricted by a previous filter\n   */\n  Relevant = 'relevant',\n  /**\n   * list of all possible domain values from database\n   */\n  Database = 'database',\n}\n\n/**\n * The option for specifying which values to include for filtering\n * Indicates what to do with null values for a given filter or mark selection call.\n */\nexport enum FilterNullOption {\n  NullValues = 'null-values',\n  NonNullValues = 'non-null-values',\n  AllValues = 'all-values',\n}\n\n/**\n * Enum that serves as a filter on the DataValues returned from `getSummaryDataAsync`,\n * `getUnderlyingTableDataAsync` and `getLogicalTableDataAsync`.\n * This is an optimization of returned data values only. Tableau versions prior to 2021.2\n * will pass the data across and populate the DataValue properties.\n * Please note that all properties not requested will be `undefined` in the DataValue results.\n * @since 1.5.0\n */\nexport enum IncludeDataValuesOption {\n  /** DataValues will include all properties. */\n  AllValues = 'all-values',\n\n  /** DataValues will only include value and nativeValue properties. */\n  OnlyNativeValues = 'only-native-values',\n\n  /** DataValues will only include formattedValue properties. */\n  OnlyFormattedValues = 'only-formatted-values',\n}\n\n/**\n * Type of mark for a given marks card in a viz.\n */\nexport enum MarkType {\n  Bar = 'bar',\n  Line = 'line',\n  Area = 'area',\n  Square = 'square',\n  Circle = 'circle',\n  Shape = 'shape',\n  Text = 'text',\n  Map = 'map',\n  Pie = 'pie',\n  GanttBar = 'gantt-bar',\n  Polygon = 'polygon',\n}\n\n/**\n * An enumeration describing the different types of allowable values.\n * This is used for restricting the domain of a parameter\n */\nexport enum ParameterValueType {\n  All = 'all',\n  List = 'list',\n  Range = 'range',\n}\n\n/**\n * Date period used in filters and in parameters.\n */\nexport enum PeriodType {\n  Years = 'years',\n  Quarters = 'quarters',\n  Months = 'months',\n  Weeks = 'weeks',\n  Days = 'days',\n  Hours = 'hours',\n  Minutes = 'minutes',\n  Seconds = 'seconds',\n}\n\nexport enum QuickTableCalcType {\n  RunningTotal = 'running-total',\n  Difference = 'difference',\n  PercentDifference = 'percent-difference',\n  PercentOfTotal = 'percent-of-total',\n  Rank = 'rank',\n  Percentile = 'percentile',\n  MovingAverage = 'moving-average',\n  YTDTotal = 'ytd-total',\n  CompoundGrowthRate = 'compound-growth-rate',\n  YearOverYearGrowth = 'year-over-year-growth',\n  YTDGrowth = 'ytd-growth',\n  Undefined = 'undefined',\n}\n\n/**\n * Enum for specifying the selection type for select marks api.\n */\nexport enum SelectionUpdateType {\n  Replace = 'select-replace',\n  Add = 'select-add',\n  Remove = 'select-remove',\n}\n\n/**\n * The type of sheet a [[Sheet]] object represents\n */\nexport enum SheetType {\n  Dashboard = 'dashboard',\n  Story = 'story',\n  Worksheet = 'worksheet',\n}\n\nexport enum SortDirection {\n  Increasing = 'increasing',\n  Decreasing = 'decreasing',\n}\n\nexport enum TrendLineModelType {\n  Linear = 'linear',\n  Logarithmic = 'logarithmic',\n  Exponential = 'exponential',\n  Polynomial = 'polynomial',\n}\n\n/**\n * Enum that represents the replay speed of an animation.\n * @since 1.7.0\n */\nexport enum ReplaySpeedType {\n  /** Used for setting the replay speed of an animation to 0.5x. */\n  Slow = 'slow',\n\n  /** Used for setting the replay speed of an animation to 1.0x. */\n  Normal = 'normal',\n\n  /** Used for setting the replay speed of an animation to 2.0x. */\n  Fast = 'fast',\n}\n\n/**\n * Enum that represents the selection state of a level in a hierarchical filter\n * @since Extensions 1.10.0\n */\nexport enum HierarchicalLevelSelectionState {\n  AllSelected = 'all-selected',\n  NoneSelected = 'none-selected',\n  SomeSelected = 'some-selected',\n  UnknownSelected = 'unknown-selected',\n}\n\n/**\n * ZoneVisibilityType\n * @deprecated use DashboardObjectVisibilityType\n */\nexport declare type ZoneVisibilityType = DashboardObjectVisibilityType;\n// eslint-disable-next-line no-redeclare\nexport const ZoneVisibilityType = { ...DashboardObjectVisibilityType };\n", "/* eslint-disable no-undef */\nimport {\n  DeviceType,\n  TableauDialogType,\n  TableauEventType,\n  Toolbar,\n} from './Enums';\n// import { SheetSize } from \"./SheetInterfaces\";\n// import { Workbook } from \"./WorkbookInterface\";\n\n/**\n * The names of the string constants you can use as HTML attributes for the <tableau-viz> web component.\n */\nexport enum VizAttributes {\n  // shared attributes - keep these in sync with the shared attribute section in VizAuthoringAttributes\n  // NOTE-hting-2021-12-07: We investigated a few ideas for extracting a VizAttributesBase but found that:\n  //    * enums are not extensible in typescript\n  //    * creating a type to fake enum extension made the documentation generated worse.\n  // Given these options, we chose to have some duplication here for the sake of significantly more readable documentation.\n  Src = 'src',\n  Width = 'width',\n  Height = 'height',\n  Token = 'token',\n  TouchOptimize = 'touch-optimize',\n  HideEditInDesktopButton = 'hide-edit-in-desktop-button',\n  SuppressDefaultEditBehavior = 'suppress-default-edit-behavior',\n  Debug = 'debug',\n  DisableVersionCheck = 'disable-version-check',\n  OnEditInDesktopButtonClicked = 'onEditInDesktopButtonClicked',\n  OnFirstVizSizeKnown = 'onFirstVizSizeKnown',\n  OnFirstInteractive = 'onFirstInteractive',\n\n  DisableUrlActionsPopups = 'disable-url-actions',\n  HideTabs = 'hide-tabs',\n  Toolbar = 'toolbar',\n  InstanceIdToClone = 'instance-id-to-clone',\n  Device = 'device',\n  HideEditButton = 'hide-edit-button',\n  OnEditButtonClicked = 'onEditButtonClicked',\n  OnFilterChanged = 'onFilterChanged',\n  OnCustomMarkContextMenuEvent = 'onCustomMarkContextMenuEvent',\n  OnMarkSelectionChanged = 'onMarkSelectionChanged',\n  OnParameterChanged = 'onParameterChanged',\n  OnToolbarStateChanged = 'onToolbarStateChanged',\n  OnUrlAction = 'onUrlAction',\n  OnTabSwitched = 'onTabSwitched',\n  OnCustomViewLoaded = 'onCustomViewLoaded',\n  OnCustomViewRemoved = 'onCustomViewRemoved',\n  OnCustomViewSaved = 'onCustomViewSaved',\n  OnCustomViewSetDefault = 'onCustomViewSetDefault',\n  OnStoryPointSwitched = 'onStoryPointSwitched',\n}\n\n/**\n * The names of the string constants you can use as HTML attributes for the <tableau-authoring-viz> web component.\n */\nexport enum VizAuthoringAttributes {\n  // shared attributes - Keep these in sync with the shared attribute section in VizAttributes. (see note on VizAttributes)\n  Src = 'src',\n  Width = 'width',\n  Height = 'height',\n  Token = 'token',\n  TouchOptimize = 'touch-optimize',\n  HideEditInDesktopButton = 'hide-edit-in-desktop-button',\n  SuppressDefaultEditBehavior = 'suppress-default-edit-behavior',\n  Debug = 'debug',\n  DisableVersionCheck = 'disable-version-check',\n  OnEditInDesktopButtonClicked = 'onEditInDesktopButtonClicked',\n  OnFirstVizSizeKnown = 'onFirstVizSizeKnown',\n  OnFirstInteractive = 'onFirstInteractive',\n\n  OnWorkbookPublished = 'onWorkbookPublished',\n  OnWorkbookPublishedAs = 'onWorkbookPublishedAs',\n  OnWorkbookReadyToClose = 'onWorkbookReadyToClose',\n  HideCloseButton = 'hide-close-button',\n}\n\n/**\n * The names of the string constants you can use as child tags for TableauViz and TableauAuthoringViz custom elements.\n */\nexport enum VizChildElements {\n  /**\n   * Contains a list of filter parameters. Available only in viewing mode.\n   */\n  VizFilter = 'viz-filter',\n\n  /**\n   * Contains a name and value for a parameter. Available only in viewing mode.\n   */\n  VizParameter = 'viz-parameter',\n\n  /**\n   * Contains a list of custom parameters.  Available in both viewing and authoring modes.\n   */\n  CustomParameter = 'custom-parameter',\n}\n\nexport enum VizChildElementAttributes {\n  Field = 'field',\n  Value = 'value',\n  Name = 'name',\n}\n\n/**\n * The interface for the top level Viz object.\n * */\nexport interface Viz extends VizSettings, VizLocalSettings, VizActions {\n  /**\n   * One Workbook is supported per visualization.\n   */\n  readonly workbook?: any;\n}\n\n/**\n * The interface for the top level Authoring Viz object.\n */\nexport interface AuthoringViz extends VizAuthoringSettings, VizLocalSettings {\n  /**\n   * Gets the visualization's current URL.\n   */\n  getCurrentSrcAsync(): Promise<string>;\n}\n\n/**\n * Partially implemented - Actions related to events and state of the viz\n */\nexport interface VizActions {\n  /**\n   * Indicates whether automatic updates are currently paused.\n   */\n  readonly automaticUpdatesArePaused: boolean;\n\n  /**\n   * Pause layout updates. This is useful if you are resizing the visualization or performing multiple calls that could affect the layout.\n   */\n  pauseAutomaticUpdatesAsync(): Promise<void>;\n\n  /**\n   * Resume layout updates.\n   */\n  resumeAutomaticUpdatesAsync(): Promise<void>;\n\n  /**\n   * Toggle layout updates.\n   */\n  toggleAutomaticUpdatesAsync(): Promise<void>;\n\n  /**\n   * Equivalent to clicking on the Revert All toolbar button, which restores the workbook to its starting state.\n   */\n  revertAllAsync(): Promise<void>;\n\n  /**\n   * Equivalent to clicking on the Refresh Data toolbar button.\n   */\n  refreshDataAsync(): Promise<void>;\n\n  /**\n   * Equivalent to clicking on Download > Image from the toolbar, which creates a PNG file of the current visualization.\n   */\n  exportImageAsync(): Promise<void>;\n\n  /**\n   * Display one of the export dialogs based on the dialogType parameter\n   *\n   * Throws an error if dialogType is invalid\n   */\n  displayDialogAsync(dialogType: TableauDialogType): Promise<void>;\n\n  /**\n   * Gets the visualization's current URL.\n   */\n  getCurrentSrcAsync(): Promise<string>;\n\n  /**\n   * Redoes the last action performed on a sheet.\n   */\n  redoAsync(): Promise<void>;\n\n  /**\n   * Undoes the last action performed on a sheet.\n   */\n  undoAsync(): Promise<void>;\n\n  /**\n   * Adds an event listener to the specified event.\n   *\n   * ```\n   * async function getSelectedMarks(event) {\n   *     const marksSelected = await event.detail.getMarksAsync();\n   *     const numMarks = marksSelected.data[0].data.length;\n   *     console.log(`${numMarks} marks Selected`);\n   * }\n   *\n   * let viz = document.getElementById('tableauViz');\n   * viz.addEventListener(\"markselectionchanged\", getSelectedMarks);\n   * ```\n   */\n  addEventListener(\n    type: TableauEventType,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n\n  /**\n   * Removes an event listener from the specified event.\n   *\n   * ```\n   * let viz = document.getElementById('tableauViz');\n   * viz.removeEventListener(\"markselectionchanged\", getSelectedMarks);\n   * ```\n   */\n  removeEventListener(\n    type: TableauEventType,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void;\n\n  /**\n   * Use this method to filter the viz before initialization. If used after initialization, it will re-render the viz.\n   * For filtering after initialization, use the other filtering methods, such as `applyFilterAsync`.\n   *\n   * If you add the same filter fields using the `addFilter()` method and by using the `<viz-filter>` element in the `<tableau-viz>` web component,\n   * you might experience unexpected behavior.\n   *\n   * @param fieldName The name of the field to filter on.\n   * @param value Single value or a list of comma separated values to filter on.\n   *\n   * ```\n   * viz.addFilter('Region', 'Central,West');\n   * ```\n   */\n  addFilter(fieldName: string, value: string): void;\n}\n\nexport interface VizSize {\n  /**\n   * Gets the sheetSize record for the current sheet\n   */\n  readonly sheetSize: any;\n\n  /**\n   * Gets the height of the Tableau UI elements (the chrome) surrounding the view.\n   */\n  readonly chromeHeight: number;\n}\n\n/**\n * This interface represents all of the options for configuring a viz that are common between\n * viewing and authoring mode.\n */\ninterface VizSettingsShared {\n  /**\n   * The token used for authorization\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\" token=\"some-token-containing-clientId\" />\n   * <tableau-authoring-viz id=\"tableauViz\" token=\"some-token-containing-clientId\" />\n   * ```\n   */\n  token?: string;\n\n  /**\n   * Indicates whether to touch optimize viz controls.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\"  touch-optimize />\n   * <tableau-authoring-viz id=\"tableauViz\"  touch-optimize />\n   * ```\n   */\n  touchOptimize?: boolean;\n\n  /**\n   * Indicates whether the Edit in Desktop button is hidden or visible.\n   * If not specified, defaults to false, meaning that the Edit in Desktop button is visible.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\" hide-edit-in-desktop-button>\n   * <tableau-authoring-viz id=\"tableauViz\" hide-edit-in-desktop-button>\n   * ```\n   */\n  hideEditInDesktopButton?: boolean;\n\n  /**\n   * Indicates whether the default edit behavior is suppressed.\n   * If not specified, defaults to false, meaning that the default edit behavior is not suppressed.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\" suppress-default-edit-behavior>\n   * <tableau-authoring-viz id=\"tableauViz\" suppress-default-edit-behavior>\n   * ```\n   */\n  suppressDefaultEditBehavior?: boolean;\n\n  /**\n   * Indicates whether the non-minified version of JavaScript is loaded. If specified (or set to true), the\n   * non-minified version is used for both the local component and the Tableau Server visualization (if enabled).\n   * If not specified (or set to false), the minified version of the JavaScript files are loaded.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\"  debug />\n   * <tableau-authoring-viz id=\"tableauViz\"  debug />\n   * ```\n   */\n  debug?: boolean;\n\n  /**\n   * An event raised when the user clicks on the Edit In Desktop Button. You can use this event type with TableauViz objects.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onEditInDesktopButtonClicked=\"onEditInDesktopButtonClickedHandler\" />\n   * <tableau-authoring-viz id=\"tableauViz\" onEditInDesktopButtonClicked=\"onEditInDesktopButtonClickedHandler\" />\n   * ```\n   */\n  onEditInDesktopButtonClicked?: string;\n\n  /**\n   * An event raised when the size of the viz is known. You can use this event to perform tasks such as resizing\n   * the elements surrounding the Viz object once the object's size has been established.\n   * ```\n   * <tableau-viz id=\"tableauViz\"  \"onFirstVizSizeKnown\"=\"onFirstVizSizeKnownHandler\" />\n   * <tableau-authoring-viz id=\"tableauViz\" onFirstVizSizeKnown=\"onFirstVizSizeKnownHandler\" />\n   * ```\n   */\n  onFirstVizSizeKnown?: string;\n\n  /**\n   * An event raised when the Viz object first becomes interactive. This is only raised once.\n   * ```\n   * <tableau-viz id=\"tableauViz\"  \"onFirstInteractive\"=\"onFirstInteractiveHandler\" />\n   * <tableau-authoring-viz id=\"tableauViz\" onFirstInteractive=\"onFirstInteractiveHandler\" />\n   * ```\n   */\n  onFirstInteractive?: string;\n}\n\n/**\n * The options for configuring a viz in view mode.\n */\nexport interface VizSettings extends VizSettingsShared {\n  /**\n   * Indicates whether to suppress the execution of URL actions. This option does not prevent the URL action\n   * event from being raised. You can use this option to change what happens when a URL action occurs. If set\n   * to true and you create an event listener for the URL_ACTION event, you can use an event listener\n   * handler to customize the actions.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\"  disable-url-actions />\n   * ```\n   */\n  disableUrlActionsPopups?: boolean;\n\n  /**\n   * Indicates whether tabs are hidden or shown.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\"  hide-tabs />\n   * ```\n   */\n  hideTabs?: boolean;\n\n  /**\n   * Specifies the position of the toolbar, if it is shown. The values can be Toolbar.Top,\n   * Toolbar.Bottom or Toolbar.Hidden.\n   * If not specified, defaults to Toolbar.Bottom.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\"  toolbar=\"hidden\" />\n   * ```\n   */\n  toolbar?: Toolbar;\n\n  /**\n   * Specifies a device layout for a dashboard, if it exists.\n   * Values can be default, desktop, tablet, or phone.\n   * If not specified, defaults to loading a layout based on the\n   * smallest dimension of the hosting iframe element.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\"  device=\"desktop\" />\n   * ```\n   */\n  device?: DeviceType;\n\n  /**\n   * Specifies the ID of an existing instance to make a copy (clone) of.\n   * This is useful if the user wants to continue analysis of an existing visualization\n   * without losing the state of the original. If the ID does not refer to an existing visualization,\n   * the cloned version is derived from the original visualization.\n   *\n   * ```\n   * <tableau-viz id=\"tableauViz\"  instance-id-to-clone=\"id1\" />\n   * ```\n   */\n  instanceIdToClone?: string;\n\n  /**\n   * Indicates whether the Edit button is hidden or visible.\n   * If not set, defaults to false, meaning that the Edit button is visible.\n   * ```\n   * <tableau-viz id=\"tableauViz\" hide-edit-button>\n   * ```\n   */\n  hideEditButton?: boolean;\n\n  /**\n   * An event raised when the user clicks on the Edit Button.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onEditButtonClicked=\"onEditButtonClickedHandler\" />\n   * ```\n   */\n  onEditButtonClicked?: string;\n\n  /**\n   * An event raised when any filter has changed state. You can use this event type with TableauViz objects.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onFilterChanged=\"onFilterChangedHandler\" />\n   * ```\n   */\n  onFilterChanged?: string;\n\n  /**\n   * An event raised when a custom mark context menu is clicked.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onCustomMarkContextMenuEvent=\"onCustomMarkContextMenuEventHandler\" />\n   * ```\n   */\n  onCustomMarkContextMenuEvent?: string;\n\n  /**\n   * An event raised when the selected marks on a visualization have changed. You can use this event type with TableauViz objects.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onMarkSelectionChanged=\"onMarkSelectionChangedHandler\" />\n   * ```\n   */\n  onMarkSelectionChanged?: string;\n\n  /**\n   * An event raised when a parameter has had its value modified. You can use this event type with [[Parameter]] objects.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onParameterChanged=\"onParameterChangedHandler\" />\n   * ```\n   */\n  onParameterChanged?: string;\n\n  /**\n   * An event raised when a toolbar button or control becomes available or becomes unavailable.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onToolbarStateChanged=\"onToolbarStateChangedHandler\" />\n   * ```\n   */\n  onToolbarStateChanged?: string;\n\n  /**\n   * An event raised when a URL action occurs. See the {@link UrlActionEvent} class.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onUrlAction=\"onUrlActionHandler\" />\n   * ```\n   */\n  onUrlAction?: string;\n\n  /**\n   * An event raised after a tab switch occurs (the active sheet has changed). Guarantees the viz object will be interactive after this.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onTabSwitched=\"onTabSwitchedHandler\" />\n   * ```\n   */\n  onTabSwitched?: string;\n\n  /**\n   * An event raised when a custom view has finished loading. This event is raised after the callback\n   * function for {@link FirstInteractive} (if any) has been called.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onCustomViewLoaded=\"onCustomViewLoadedHandler\" />\n   * ```\n   */\n  onCustomViewLoaded?: string;\n\n  /**\n   * An event raised when a custom view has been removed.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onCustomViewRemoved=\"onCustomViewRemovedHandler\" />\n   * ```\n   */\n  onCustomViewRemoved?: string;\n\n  /**\n   * An event raised when a custom view has been saved (newly created or updated).\n   * ```\n   * <tableau-viz id=\"tableauViz\" onCustomViewSaved=\"onCustomViewSavedHandler\" />\n   * ```\n   */\n  onCustomViewSaved?: string;\n\n  /**\n   * An event raised when a custom view has been set as the default view for a workbook.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onCustomViewSetDefault=\"onCustomViewSetDefaultHandler\" />\n   * ```\n   */\n  onCustomViewSetDefault?: string;\n\n  /**\n   * An event raised after a new story point becomes active.\n   * ```\n   * <tableau-viz id=\"tableauViz\" onStoryPointSwitched=\"onStoryPointSwitchedHandler\" />\n   * ```\n   */\n  onStoryPointSwitched?: string;\n}\n\n/**\n * (Beta) Represents the options for configuring a viz in authoring mode.\n */\nexport interface VizAuthoringSettings extends VizSettingsShared {\n  /**\n   * Indicates whether the Close button is hidden or visible.\n   * If not set, defaults to false, meaning that the Close button is visible.\n   * ```\n   * <tableau-authoring-viz id=\"tableauViz\" hide-close-button />\n   * ```\n   */\n  hideCloseButton?: boolean;\n\n  /**\n   * An event raised when the workbook has been published. This notification is sent when using embedded web authoring functionality.\n   * ```\n   * <tableau-authoring-viz id=\"tableauViz\" onWorkbookPublished=\"onWorkbookPublishedHandler\" />\n   * ```\n   */\n  onWorkbookPublished?: string;\n\n  /**\n   * An event raised when \"publish as\" is successful. This notification is sent when using embedded web authoring functionality.\n   * ```\n   * <tableau-authoring-viz id=\"tableauViz\" onWorkbookPublishedAs=\"onWorkbookPublishedAsHandler\" />\n   * ```\n   */\n  onWorkbookPublishedAs?: string;\n\n  /**\n   * An event raised when the workbook is ready to close. This notification is sent when using embedded web authoring functionality.\n   * ```\n   * <tableau-authoring-viz id=\"tableauViz\" onWorkbookReadyToClose=\"onWorkbookReadyToCloseHandler\" />\n   * ```\n   */\n  onWorkbookReadyToClose?: string;\n}\n\n/**\n * User supplied options that do not get passed as request parameters to load a Tableau viz\n */\nexport interface VizLocalSettings {\n  /**\n   * The viz src\n   */\n  src?: string | null;\n\n  /**\n   * Represents width in pixels\n   * Can be any valid CSS size specifier. If not specified, defaults to the published width of the view.\n   */\n  width?: string | number;\n\n  /**\n   * Represents height in pixels\n   * Can be any valid CSS size specifier. If not specified, defaults to the published height of the view.\n   */\n  height?: string | number;\n}\n\nexport interface FilterParameters {\n  field: string;\n  value: string;\n}\n\n/**\n * VizParameters are used to set Parameter values on the viz.\n *\n * * ```\n * <tableau-viz id=\"tableauViz\">\n *  <viz-parameter name=\"parameter-name\" value=\"parameter-value\"></viz-parameter>\n * </tableau-viz>\n * ```\n *\n */\nexport interface VizParameter {\n  /**\n   * Name of the parameter to be set.\n   */\n  name: string;\n\n  /**\n   * Valid value for the parameter being set.\n   */\n  value: string;\n}\n\n/**\n * CustomParameters are used to pass along settings, information, etc., that aren't exposed on the\n * tableau-viz element. CustomParameters will override attributes, or filters, set on the tableau-viz element.\n *\n * * ```\n * <tableau-viz id=\"tableauViz\">\n *  <custom-parameter name=\"parameter-name\" value=\"parameter-value\"></custom-parameter>\n * </tableau-viz>\n * ```\n *\n */\nexport interface CustomParameter {\n  /**\n   * Name of the parameter to be set.\n   */\n  name: string;\n\n  /**\n   * Valid value for the parameter being set.\n   */\n  value: string;\n}\n"],
  "mappings": "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",
  "names": ["React", "React", "DeviceType", "EmbeddingErrorCodes", "FileFormats", "RevertVizSelection", "ToolbarButtons", "Toolbar", "SheetSizeBehavior", "TableauEventType", "ApiMenuType", "TableauDialogType", "React", "AnalyticsObjectType", "AnnotationType", "ColumnType", "ClassNameKey", "DashboardObjectType", "DashboardObjectVisibilityType", "DataType", "DashboardLayoutChange", "DateRangeType", "DialogStyle", "EncodingType", "FieldAggregationType", "FieldRoleType", "FilterType", "FilterUpdateType", "FilterDomainType", "FilterNullOption", "IncludeDataValuesOption", "MarkType", "ParameterValueType", "PeriodType", "QuickTableCalcType", "SelectionUpdateType", "SheetType", "SortDirection", "TrendLineModelType", "ReplaySpeedType", "HierarchicalLevelSelectionState", "VizAttributes", "VizAuthoringAttributes", "VizChildElements", "VizChildElementAttributes"]
}
